"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.race = void 0;
var CancelController_1 = require("./CancelController");
var race = function (fns, _a) {
    var cancel = (_a === void 0 ? {} : _a).cancel;
    var lastError = null;
    var winnerIndex = null;
    var controllers = fns.map(function () { return new CancelController_1.default(); });
    var createStopRaceCallback = function (i) { return function () {
        winnerIndex = i;
        controllers.forEach(function (controller, index) { return index !== i && controller.cancel(); });
    }; };
    if (cancel) {
        cancel.onCancel(function () {
            controllers.forEach(function (controller) { return controller.cancel(); });
        });
    }
    return Promise.all(fns.map(function (fn, i) {
        var stopRace = createStopRaceCallback(i);
        return Promise.resolve()
            .then(function () { return fn({ stopRace: stopRace, cancel: controllers[i] }); })
            .then(function (result) {
            stopRace();
            return result;
        })
            .catch(function (error) {
            lastError = error;
            return null;
        });
    })).then(function (results) {
        if (winnerIndex === null) {
            throw lastError;
        }
        else {
            return results[winnerIndex];
        }
    });
};
exports.race = race;
