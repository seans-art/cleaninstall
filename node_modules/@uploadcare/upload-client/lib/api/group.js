"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var request_node_1 = require("../request/request.node");
var getUrl_1 = require("../tools/getUrl");
var defaultSettings_1 = require("../defaultSettings");
var userAgent_1 = require("../tools/userAgent");
var camelizeKeys_1 = require("../tools/camelizeKeys");
var errors_1 = require("../tools/errors");
var retryIfThrottled_1 = require("../tools/retryIfThrottled");
/**
 * Create files group.
 */
function group(uuids, _a) {
    var publicKey = _a.publicKey, _b = _a.baseURL, baseURL = _b === void 0 ? defaultSettings_1.default.baseURL : _b, jsonpCallback = _a.jsonpCallback, secureSignature = _a.secureSignature, secureExpire = _a.secureExpire, cancel = _a.cancel, source = _a.source, integration = _a.integration, _c = _a.retryThrottledRequestMaxTimes, retryThrottledRequestMaxTimes = _c === void 0 ? defaultSettings_1.default.retryThrottledRequestMaxTimes : _c;
    return retryIfThrottled_1.default(function () {
        return request_node_1.default({
            method: 'POST',
            headers: {
                'X-UC-User-Agent': userAgent_1.getUserAgent({ publicKey: publicKey, integration: integration })
            },
            url: getUrl_1.default(baseURL, '/group/', {
                jsonerrors: 1,
                pub_key: publicKey,
                files: uuids,
                callback: jsonpCallback,
                signature: secureSignature,
                expire: secureExpire,
                source: source
            }),
            cancel: cancel
        }).then(function (_a) {
            var data = _a.data, headers = _a.headers, request = _a.request;
            var response = camelizeKeys_1.default(JSON.parse(data));
            if ('error' in response) {
                throw new errors_1.UploadClientError("[" + response.error.statusCode + "] " + response.error.content, request, response.error, headers);
            }
            else {
                return response;
            }
        });
    }, retryThrottledRequestMaxTimes);
}
exports.default = group;
